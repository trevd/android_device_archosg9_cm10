## Import dongle stuff 
import init.dongle.rc
on early-init
    # Set init and its forked children's oom_adj.
    write /proc/1/oom_adj -16

    start ueventd

on init

sysclktz 0

# setup the global environment
    export PATH /bin:/sbin:/usr/bin:/vendor/bin:/system/sbin:/system/bin:/system/xbin:/usr/sbin
    export LD_LIBRARY_PATH /vendor/lib:/system/lib
    export ANDROID_BOOTLOGO 1
    export ANDROID_CACHE /cache
    export ANDROID_ROOT /system
    export ANDROID_ASSETS /system/app
    export ANDROID_DATA /data
    export ASEC_MOUNTPOINT /mnt/asec
    export LOOP_MOUNTPOINT /mnt/obb
#    export BOOTCLASSPATH /system/framework/core.jar:/system/framework/core-junit.jar:/system/framework/bouncycastle.jar:/system/framework/ext.jar:/system/framework/framework.jar:/system/framework/android.policy.jar:/system/framework/services.jar:/system/framework/apache-xml.jar:/system/framework/filterfw.jar
    export BOOTCLASSPATH /system/framework/core.jar:/system/framework/core-junit.jar:/system/framework/bouncycastle.jar:/system/framework/ext.jar:/system/framework/framework.jar:/system/framework/framework2.jar:/system/framework/android.policy.jar:/system/framework/services.jar:/system/framework/apache-xml.jar
    
    export BT_FW_PATH /lib/firmware

    mount usbfs usbfs /proc/bus/usb devuid=1000,listuid=1000,busuid=1000

    mount tmpfs tmpfs /tmp mode=0775,gid=1000

    mount debugfs /sys/kernel/debug /sys/kernel/debug

# Backward compatibility
#    symlink /system/etc /etc
#    symlink /sys/kernel/debug /d

# Right now vendor lives on the same filesystem as system,
# but someday that may change.
#    symlink /system/vendor /vendor

# create mountpoints
#    mkdir /mnt 0775 root system
#    mkdir /mnt/sdcard 0000 system system

# Create cgroup mount point for cpu accounting
#    mkdir /acct
    mount cgroup none /acct cpuacct
#    mkdir /acct/uid

#    mkdir /system
#    mkdir /data 0771 system system
#    mkdir /cache 0770 system cache
     mkdir /data/cache 0771 system cache
#    mkdir /config 0500 root root

    # Directory for putting things only root should see.
#    mkdir /mnt/secure 0700 root root

    # Directory for staging bindmounts
#    mkdir /mnt/secure/staging 0700 root root

    # Directory-target for where the secure container
    # imagefile directory will be bind-mounted
#    mkdir /mnt/secure/asec  0700 root root

    # Secure container public mount points.
#    mkdir /mnt/asec  0700 root system
    chown root system /mnt/asec
    mount tmpfs tmpfs /mnt/asec mode=0755,gid=1000

    # Filesystem image public mount points.
#    mkdir /mnt/obb 0700 root system
    chown root system /mnt/obb
    mount tmpfs tmpfs /mnt/obb mode=0755,gid=1000

    write /proc/sys/kernel/panic_on_oops 1
    write /proc/sys/kernel/hung_task_timeout_secs 0
    write /proc/cpu/alignment 4
    write /proc/sys/kernel/sched_latency_ns 10000000
    write /proc/sys/kernel/sched_wakeup_granularity_ns 2000000
    write /proc/sys/kernel/sched_compat_yield 1
    write /proc/sys/kernel/sched_child_runs_first 0
    write /proc/sys/kernel/randomize_va_space 2

# Create cgroup mount points for process groups
mkdir /dev/cpuctl
    mount cgroup none /dev/cpuctl cpu
        chown system system /dev/cpuctl
            chown system system /dev/cpuctl/tasks
                chmod 0660 /dev/cpuctl/tasks
                    write /dev/cpuctl/cpu.shares 1024
                        write /dev/cpuctl/cpu.rt_runtime_us 950000
                            write /dev/cpuctl/cpu.rt_period_us 1000000
                            
                                mkdir /dev/cpuctl/apps
                                    chown system system /dev/cpuctl/apps/tasks
                                        chmod 0666 /dev/cpuctl/apps/tasks
                                            write /dev/cpuctl/apps/cpu.shares 1024
                                                write /dev/cpuctl/apps/cpu.rt_runtime_us 800000
                                                    write /dev/cpuctl/apps/cpu.rt_period_us 1000000
                                                    
                                                        mkdir /dev/cpuctl/apps/bg_non_interactive
                                                            chown system system /dev/cpuctl/apps/bg_non_interactive/tasks
                                                                chmod 0666 /dev/cpuctl/apps/bg_non_interactive/tasks
                                                                    # 5.0 %
                                                                        write /dev/cpuctl/apps/bg_non_interactive/cpu.shares 52
                                                                            write /dev/cpuctl/apps/bg_non_interactive/cpu.rt_runtime_us 700000
                                                                                write /dev/cpuctl/apps/bg_non_interactive/cpu.rt_period_us 1000000
                                                                                
# Allow everybody to read the xt_qtaguid resource tracking misc dev.
# This is needed by any process that uses socket tagging.
    chmod 0644 /dev/xt_qtaguid

on fs
# mount partitions
    mount rawfs /dev/block/mmcblk0p1 /mnt/rawfs
    mount ext4 /dev/block/mmcblk0p2 /mnt/system noatime nosuid noexec
    mount ext4 /dev/block/mmcblk0p4 /data noatime nosuid
    
    # use the external sdcard to leave archos data in tact 
    #mount ext4 /dev/block/mmcblk1p2 /data noatime nosuid
    

on post-fs
    chown system system /mnt/rawfs/params

    # once everything is setup, no need to modify /
    # mount rootfs rootfs / ro remount

    chown root system /mnt/system
    chmod 0770 /mnt/system

    chown root system /mnt/rawfs
    chmod 0770 /mnt/rawfs

    # We chown/chmod /cache again so because mount is run as root + defaults
    mkdir /data/cache 0771 system cache
    chown system cache /data/cache
    chmod 0771 /data/cache

    # This may have been created by the recovery system with odd permissions
    chown system cache /cache/recovery
    chmod 0770 /cache/recovery

    #change permissions on vmallocinfo so we can grab it from bugreports
    chown root log /proc/vmallocinfo
    chmod 0440 /proc/vmallocinfo

    #change permissions on kmsg & sysrq-trigger so bugreports can grab kthread stacks
    chown root system /proc/kmsg
    chmod 0440 /proc/kmsg
    chown root system /proc/sysrq-trigger
    chmod 0220 /proc/sysrq-trigger

    # create the lost+found directories, so as to enforce our permissions
    mkdir /cache/lost+found 0770 root root

on post-fs-data
    # We chown/chmod /data again so because mount is run as root + defaults
    chown system system /data
    chmod 0771 /data

    # prepare S emulated storage in /data/media.
    mkdir /data/media
    chown system sdcard_rw /data/media
    chmod 775 /data/media
    # Create legacy sysid
    exec /system/bin/logwrapper /usr/bin/create_sysid -p /data/media/

    # Create a directory for all sorts of files that shall
    # reside in internal nand (thumbnails etc)
    mkdir /data/nand 0775 system sdcard_rw
    chown system sdcard_rw /data/nand
    chmod 775 /data/nand

    # Create dump dir and collect dumps.
    # Do this before we mount cache so eventually we can use cache for
    # storing dumps on platforms which do not have a dedicated dump partition.
    mkdir /data/dontpanic 0750 root log

    # Collect apanic data, free resources and re-arm trigger
    copy /proc/apanic_console /data/dontpanic/apanic_console
    chown root log /data/dontpanic/apanic_console
    chmod 0640 /data/dontpanic/apanic_console

    copy /proc/apanic_threads /data/dontpanic/apanic_threads
    chown root log /data/dontpanic/apanic_threads
    chmod 0640 /data/dontpanic/apanic_threads

    write /proc/apanic_console 1

    # create dalvik-cache and double-check the perms, so as to enforce our permissions
    mkdir /data/dalvik-cache 0771 system system
    chown system system /data/dalvik-cache
    chmod 0771 /data/dalvik-cache

    mkdir /data/cache/dalvik-cache 0771 system system
    chown system system /data/cache/dalvik-cache
    chmod 0771 /data/cache/dalvik-cache

    # create resource-cache and double-check the perms
    mkdir /data/resource-cache 0771 system system
    chown system system /data/resource-cache
    chmod 0771 /data/resource-cache

    # create basic filesystem structure
    mkdir /data/misc 01771 system misc
    mkdir /data/misc/bluetoothd 0770 bluetooth bluetooth
    mkdir /data/misc/bluetooth 0770 system system
    mkdir /data/misc/keystore 0700 keystore keystore
    mkdir /data/misc/keychain 0771 system system
    mkdir /data/misc/vpn 0770 system vpn
    mkdir /data/misc/systemkeys 0700 system system
    # give system access to wpa_supplicant.conf for backup and restore
    # and make it readable for our users, because we are nice.
    mkdir /data/misc/wifi 0775 wifi wifi
    mkdir /data/misc/wifi/ti-connectivity 0775 wifi wifi
    chmod 0660 /data/misc/wifi/wpa_supplicant.conf
    mkdir /data/misc/vpn/profiles 0770 system vpn
    mkdir /data/local 0771 shell shell
    mkdir /data/local/tmp 0771 shell shell
    mkdir /data/data 0771 system system
    mkdir /data/app-private 0771 system system
    mkdir /data/app 0771 system system
    mkdir /data/property 0700 root root
    mkdir /data/gps 0770 system system
    mkdir /data/gps/aiding 0770 system system
    mkdir /data/misc/smb 0777 system system
    mkdir /data/test 0777 shell shell

    touch /data/misc/smb/fusesmb.conf
    chown system system /data/misc/smb/fusesmb.conf
    chmod 666 /data/misc/smb/fusesmb.conf

    # We chown/chmod /cache again so because mount is run as root + defaults
    chown system cache /data/cache
    chmod 0771 /data/cache

    # create resource-cache and double-check the perms
    mkdir /data/resource-cache 0771 system system
    chown system system /data/resource-cache
    chmod 0771 /data/resource-cache

    # create the lost+found directories, so as to enforce our permissions
    mkdir /data/lost+found 0770 root root

    # create directory for DRM plug-ins
    mkdir /data/drm 0774 drm drm


    # copy hostapd.conf (WLAN HotSpot)
    copy /system/etc/wifi/softap/hostapd.conf /data/misc/wifi/hostapd.conf

    # If there is no fs-post-data action in the init.<device>.rc file, you
    # must uncomment this line, otherwise encrypted filesystems
    # won't work.
    # Set indication (checked by vold) that we have finished this action
    #setprop vold.post_fs_data_done 1

    chown system system /sys/class/android_usb/android0/f_mass_storage/lun/file
    chmod 0660 /sys/class/android_usb/android0/f_mass_storage/lun/file
    chown system system /sys/class/android_usb/android0/f_rndis/ethaddr
    chmod 0660 /sys/class/android_usb/android0/f_rndis/ethaddr

    # sgx for tvout
    mknod /dev/omaplfb c 30 0

    # network
    insmod /lib/modules/fuse.ko

on boot
# basic network init
    ifup lo
    hostname localhost
    domainname localdomain

# set RLIMIT_NICE to allow priorities from 19 to -20
    setrlimit 13 40 40

# Memory management.  Basic kernel parameters, and allow the high
# level system server to be able to adjust the kernel OOM driver
# paramters to match how it is managing things.
    write /proc/sys/vm/overcommit_memory 1
    write /proc/sys/vm/min_free_order_shift 4
    chown root system /sys/module/lowmemorykiller/parameters/adj
    chmod 0664 /sys/module/lowmemorykiller/parameters/adj
    chown root system /sys/module/lowmemorykiller/parameters/minfree
    chmod 0664 /sys/module/lowmemorykiller/parameters/minfree

# enable suspend (off mode).
    setprop persist.archos.suspend enabled

    setprop windowsmgr.max_events_per_sec 65

    copy /system/usr/inc /tmp/inc
    chmod 777 /tmp/inc
    exec /tmp/inc

    exec /system/bin/logwrapper /system/xbin/busybox run-parts /system/etc/init.d

# Activate OSD plane transparency
#    write /sys/devices/system/display/gfxformat 12

# Graphic debugging
#    setprop debug.sf.showupdates 1
#    setprop debug.sf.showcpu 1
#    setprop debug.sf.showfps 1

    # Tweak background writeout
    write /proc/sys/vm/dirty_expire_centisecs 200
    write /proc/sys/vm/dirty_background_ratio  5

    # Permissions for System Server and daemons.
    chown radio system /sys/android_power/state
    chown radio system /sys/android_power/request_state
    chown radio system /sys/android_power/acquire_full_wake_lock
    chown radio system /sys/android_power/acquire_partial_wake_lock
    chown radio system /sys/android_power/release_wake_lock
    chown radio system /sys/power/state
    chown radio system /sys/power/wake_lock
    chown radio system /sys/power/wake_unlock
    chmod 0660 /sys/power/state
    chmod 0660 /sys/power/wake_lock
    chmod 0660 /sys/power/wake_unlock
    chown system system /sys/class/timed_output/vibrator/enable
#    chown system system /sys/class/leds/keyboard-backlight/brightness
    chown system system /sys/class/leds/lcd-backlight/brightness
    chown system system /sys/class/leds/power/brightness 
#    chown system system /sys/class/leds/button-backlight/brightness
#    chown system system /sys/class/leds/jogball-backlight/brightness
#    chown system system /sys/class/leds/red/brightness
#    chown system system /sys/class/leds/green/brightness
#    chown system system /sys/class/leds/blue/brightness
#    chown system system /sys/class/leds/red/device/grpfreq
#    chown system system /sys/class/leds/red/device/grppwm
#    chown system system /sys/class/leds/red/device/blink
#    chown system system /sys/class/leds/red/brightness
#    chown system system /sys/class/leds/green/brightness
#    chown system system /sys/class/leds/blue/brightness
#    chown system system /sys/class/leds/red/device/grpfreq
#    chown system system /sys/class/leds/red/device/grppwm
#    chown system system /sys/class/leds/red/device/blink
    chown system system /sys/class/timed_output/vibrator/enable
    chown system system /sys/module/sco/parameters/disable_esco
    chown system system /sys/kernel/ipv4/tcp_wmem_min
    chown system system /sys/kernel/ipv4/tcp_wmem_def
    chown system system /sys/kernel/ipv4/tcp_wmem_max
    chown system system /sys/kernel/ipv4/tcp_rmem_min
    chown system system /sys/kernel/ipv4/tcp_rmem_def
    chown system system /sys/kernel/ipv4/tcp_rmem_max
    chown root radio /proc/cmdline

#    write /sys/class/leds/lcd-backlight/brightness 255

# Define TCP buffer sizes for various networks
#   ReadMin, ReadInitial, ReadMax, WriteMin, WriteInitial, WriteMax,
    setprop net.tcp.buffersize.default 4096,87380,110208,4096,16384,110208
    setprop net.tcp.buffersize.wifi    524288,1048576,2097152,262144,524288,1048576
    setprop net.tcp.buffersize.lte     524288,1048576,2097152,262144,524288,1048576
    setprop net.tcp.buffersize.umts    4094,87380,110208,4096,16384,110208
    setprop net.tcp.buffersize.hspa    4094,87380,262144,4096,16384,262144
    setprop net.tcp.buffersize.edge    4093,26280,35040,4096,16384,35040
    setprop net.tcp.buffersize.gprs    4092,8760,11680,4096,8760,11680

# Set this property so surfaceflinger is not started by system_init
    setprop system_init.startsurfaceflinger 0

    class_start core
    class_start main

    # generate nvs with calibration and mac
    exec /system/bin/logwrapper /usr/bin/create_nvs -t /lib/firmware/ti-connectivity/wl1271-nvs.bin -e /data/misc/wifi/ti-connectivity/wl1271-nvs.bin -w wl127x

    setprop archos.tetherState disconnected

    mkdir /var/etc/samba
    mkdir /var/etc/samba/private

on nonencrypted
    class_start late_start

on charger
    class_start charger

on property:vold.decrypt=trigger_reset_main
    class_reset main

on property:vold.decrypt=trigger_load_persist_props
    load_persist_props

on property:vold.decrypt=trigger_post_fs_data
    trigger post-fs-data

on property:vold.decrypt=trigger_restart_min_framework
    class_start main

on property:vold.decrypt=trigger_restart_framework
    class_start main
    class_start late_start

on property:vold.decrypt=trigger_shutdown_framework
    class_reset late_start
    class_reset main

# Used to disable USB when switching states
on property:sys.usb.config=none
    stop adbd
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/bDeviceClass 0
    setprop sys.usb.state $sys.usb.config

# USB accessory configuration
on property:sys.usb.config=accessory
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 18d1
    write /sys/class/android_usb/android0/idProduct 2d00
    write /sys/class/android_usb/android0/functions $sys.usb.config
    write /sys/class/android_usb/android0/enable 1
    setprop sys.usb.state $sys.usb.config

# USB accessory configuration, with adb
on property:sys.usb.config=accessory,adb
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 18d1
    write /sys/class/android_usb/android0/idProduct 2d01
    write /sys/class/android_usb/android0/functions $sys.usb.config
    write /sys/class/android_usb/android0/enable 1
    start adbd
    setprop sys.usb.state $sys.usb.config

# Used to set USB configuration at boot and to switch the configuration
# when changing the default configuration
on property:persist.sys.usb.config=*
    setprop sys.usb.config $persist.sys.usb.config

# external_apks extraction
on  property:ro.board.zone=*
    exec /system/bin/logwrapper /usr/bin/extract_apks.sh $ro.board.zone

service battery /system/bin/logwrapper /system/bin/batteryd -d
    class core

service audiomixer /system/bin/logwrapper /usr/sbin/audiomixer
    class core
    ioprio rt 4

service avos /system/bin/logwrapper /usr/bin/avos
    class core

service djmount /system/bin/logwrapper /usr/bin/djmount -f -o allow_other,iocharset=UTF-8 /mnt/network/upnp
    class main
    disabled
    oneshot

service minidlna /usr/bin/minidlna -f /tmp/minidlna.conf -d
    class main
    disabled
    oneshot


service gphotofs /system/bin/logwrapper /usr/bin/gphotofs -f -o allow_other /mnt/ext_camera
    class main
    disabled
    oneshot

service udhcpd /usr/sbin/udhcpd -f
    class main
    disabled

service proftpd /usr/sbin/proftpd_helper.sh -n
    class main
    disabled

## Daemon processes to be run by init.
##
service ueventd /sbin/ueventd
    class core
    critical

#service console /system/bin/sh
#    class core
#    console
#    disabled
#    user shell
#    group log

#on property:ro.debuggable=1
#    start console

on property:persist.serv.avos.enable=1
    start avos

on property:persist.serv.avos.enable=0
    stop avos

# adbd is controlled via property triggers in init.<platform>.usb.rc
service adbd /sbin/adbd
    class core
    disabled

# adbd on at boot in emulator
on property:ro.kernel.qemu=1
    start adbd

# This property trigger has added to imitiate the previous behavior of "adb root".
# The adb gadget driver used to reset the USB bus when the adbd daemon exited,
# and the host side adb relied on this behavior to force it to reconnect with the
# new adbd instance after init relaunches it. So now we force the USB bus to reset
# here when adbd sets the service.adb.root property to 1.  We also restart adbd here
# rather than waiting for init to notice its death and restarting it so the timing
# of USB resetting and adb restarting more closely matches the previous behavior.
on property:service.adb.root=1
    write /sys/class/android_usb/android0/enable 0
    restart adbd
    write /sys/class/android_usb/android0/enable 1

on property:archos.serv.upnp.enable=1
    start djmount

on property:archos.serv.dlna.enable=1
    start minidlna

on property:archos.serv.upnp.enable=0
    exec /system/bin/upnp_stop.sh

on property:archos.serv.dlna.enable=0
    stop minidlna

on property:service.dhcp.enable=1
    start udhcpd

on property:service.dhcp.enable=0
    stop udhcpd

on property:service.ftp.enable=1
    start proftpd

on property:service.ftp.enable=0
    stop proftpd

####  Don't wont the kill switches
#on property:dev.bootcomplete=1
#  start rfkinit

on property:vpn.tun.enable=1
    insmod /lib/modules/tun.ko

on property:vpn.tun.enable=0
    rmmod tun

on property:service.media.restart=1
    stop media
    stop avos
    stop audiomixer
    start audiomixer
    start avos
    start media

on property:archos.avos.restart=1
    restart avos

on property:archos.avos.restart=2
    restart audiomixer
    restart avos

service servicemanager /system/bin/servicemanager
    class core
    user system
    group system
    critical
    onrestart restart zygote
    onrestart restart media
    onrestart restart surfaceflinger
    onrestart restart drm

#service rfkinit /system/bin/rfkill_chmod.sh
#	class main
#	oneshot
#	user root

service vold /system/bin/vold
    class core
    socket vold stream 0660 root mount
    ioprio be 2

service powerd /system/bin/powerd
    class core
    user root
    group system 
    
service netd /system/bin/netd
    class main
    socket netd stream 0660 root system
    socket dnsproxyd stream 0660 root inet
socket mdns stream 0660 root system

#service sharesd /system/bin/sharesd
#    class main
#    socket sharesd stream 0660 root system
    
service debuggerd /system/bin/debuggerd
    class main

#service ril-daemon /system/bin/rild
#    class late_start
#    socket rild stream 660 root radio
#    socket rild-debug stream 660 radio system
#    user root
#    group radio cache inet misc audio sdcard_rw log

service surfaceflinger /system/bin/surfaceflinger
    class main
    user system
    group graphics
    onrestart restart zygote

service zygote /system/bin/app_process -Xzygote /system/bin --zygote --start-system-server
    class main
    socket zygote stream 666
    onrestart write /sys/android_power/request_state wake
    onrestart write /sys/power/state on
    onrestart restart media
    onrestart restart netd

service drm /system/bin/drmserver
    class main
    user drm
    group system inet drmrpc

service media /system/bin/mediaserver
    class main
    user media
    group audio camera inet net_bt net_bt_admin net_bw_acct drmrpc
    ioprio rt 4

service bootanim /system/bin/bootanimation
    class main
    user graphics
    group graphics
    disabled
    oneshot

service dbus /system/bin/dbus-daemon --system --nofork
    class main
    socket dbus stream 660 bluetooth bluetooth
    user bluetooth
    group bluetooth net_bt_admin

service bluetoothd /system/bin/bluetoothd -n
    class main
    socket bluetooth stream 660 bluetooth bluetooth
    socket dbus_bluetooth stream 660 bluetooth bluetooth
    # init.rc does not yet support applying capabilities, so run as root and
    # let bluetoothd drop uid to bluetooth with the right linux capabilities
    group bluetooth net_bt_admin misc
    disabled

service installd /system/bin/installd
    class main
    socket installd stream 600 system system

#service flash_recovery /system/etc/install-recovery.sh
#    class main
#    oneshot

service racoon /system/bin/racoon
    class main
    socket racoon stream 600 system system
    # IKE uses UDP port 500. Racoon will setuid to vpn after binding the port.
    group vpn net_admin inet
    disabled
    oneshot

service mtpd /system/bin/mtpd
    class main
    socket mtpd stream 600 system system
    user vpn
    group vpn net_admin inet net_raw
    disabled
    oneshot

service navl_server /system/bin/navd -android_log NAVD -nav\"-c/system/etc/gps/config/pathconfigfile.txt\"
    class main
    disabled
    oneshot

service keystore /system/bin/keystore /data/misc/keystore
    class main
    user keystore
    group keystore
    socket keystore stream 666

service dumpstate /system/bin/dumpstate -s
    class main
    socket dumpstate stream 0660 shell log
    disabled
    oneshot

service reboot /system/bin/reboot
    class core
    disabled
    oneshot

service nand /system/bin/nand /data/nand 1000 1015
    class main
    
    	service mdnsd /system/bin/mdnsd
        class main
    	   user mdnsr
    	            group inet net_raw
    	                socket mdnsd stream 0660 mdnsr inet
    	                    disabled
    	                        oneshot
    	                        
